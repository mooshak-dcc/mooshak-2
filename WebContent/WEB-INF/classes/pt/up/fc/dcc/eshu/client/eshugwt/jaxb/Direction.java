//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.10.19 at 11:31:31 AM WEST 
//


package pt.up.fc.dcc.eshu.client.eshugwt.jaxb;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for Direction.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="Direction">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="north"/>
 *     &lt;enumeration value="northeast"/>
 *     &lt;enumeration value="east"/>
 *     &lt;enumeration value="southeast"/>
 *     &lt;enumeration value="south"/>
 *     &lt;enumeration value="southwest"/>
 *     &lt;enumeration value="west"/>
 *     &lt;enumeration value="northwest"/>
 *     &lt;enumeration value="center"/>
 *     &lt;enumeration value="northnortheast"/>
 *     &lt;enumeration value="eastnortheast"/>
 *     &lt;enumeration value="eastsoutheast"/>
 *     &lt;enumeration value="northnorthwest"/>
 *     &lt;enumeration value="southsoutheast"/>
 *     &lt;enumeration value="southsouthwest"/>
 *     &lt;enumeration value="westsouthwest"/>
 *     &lt;enumeration value="westnortwest"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "Direction")
@XmlEnum
public enum Direction {

    @XmlEnumValue("north")
    NORTH("north"),
    @XmlEnumValue("northeast")
    NORTHEAST("northeast"),
    @XmlEnumValue("east")
    EAST("east"),
    @XmlEnumValue("southeast")
    SOUTHEAST("southeast"),
    @XmlEnumValue("south")
    SOUTH("south"),
    @XmlEnumValue("southwest")
    SOUTHWEST("southwest"),
    @XmlEnumValue("west")
    WEST("west"),
    @XmlEnumValue("northwest")
    NORTHWEST("northwest"),
    @XmlEnumValue("center")
    CENTER("center"),
    @XmlEnumValue("northnortheast")
    NORTHNORTHEAST("northnortheast"),
    @XmlEnumValue("eastnortheast")
    EASTNORTHEAST("eastnortheast"),
    @XmlEnumValue("eastsoutheast")
    EASTSOUTHEAST("eastsoutheast"),
    @XmlEnumValue("northnorthwest")
    NORTHNORTHWEST("northnorthwest"),
    @XmlEnumValue("southsoutheast")
    SOUTHSOUTHEAST("southsoutheast"),
    @XmlEnumValue("southsouthwest")
    SOUTHSOUTHWEST("southsouthwest"),
    @XmlEnumValue("westsouthwest")
    WESTSOUTHWEST("westsouthwest"),
    @XmlEnumValue("westnortwest")
    WESTNORTWEST("westnortwest");
    private final String value;

    Direction(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static Direction fromValue(String v) {
        for (Direction c: Direction.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
