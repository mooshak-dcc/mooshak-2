//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.10.19 at 11:31:31 AM WEST 
//


package pt.up.fc.dcc.eshu.client.eshugwt.jaxb;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;



/**
 * <p>Java class for Diagram complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="Diagram">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="nodeTypes" type="{http://www.example.org/EshuConfig}NodeTypes" maxOccurs="unbounded"/>
 *         &lt;element name="edgeTypes" type="{http://www.example.org/EshuConfig}EdgeTypes" maxOccurs="unbounded"/>
 *         &lt;element name="syntaxeValidation" type="{http://www.example.org/EshuConfig}SyntaxeValidation"/>
 *       &lt;/sequence>
 *       &lt;attribute name="name" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="extension" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Diagram", propOrder = {
    "nodeTypes",
    "edgeTypes",
    "syntaxeValidation"
})
public class Diagram {

    @XmlElement(required = true)
    protected List<NodeTypes> nodeTypes;
    @XmlElement(required = true)
    protected List<EdgeTypes> edgeTypes;
    @XmlElement(required = true)
    protected SyntaxeValidation syntaxeValidation;
    @XmlAttribute(name = "name", required = true)
    protected String name;
    @XmlAttribute(name = "extension", required = true)
    protected String extension;

    /**
     * Gets the value of the nodeTypes property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the nodeTypes property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getNodeTypes().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link NodeTypes }
     * 
     * 
     */
    public List<NodeTypes> getNodeTypes() {
        if (nodeTypes == null) {
            nodeTypes = new ArrayList<NodeTypes>();
        }
        return this.nodeTypes;
    }

    /**
     * Gets the value of the edgeTypes property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the edgeTypes property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getEdgeTypes().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link EdgeTypes }
     * 
     * 
     */
    public List<EdgeTypes> getEdgeTypes() {
        if (edgeTypes == null) {
            edgeTypes = new ArrayList<EdgeTypes>();
        }
        return this.edgeTypes;
    }

    /**
     * Gets the value of the syntaxeValidation property.
     * 
     * @return
     *     possible object is
     *     {@link SyntaxeValidation }
     *     
     */
    public SyntaxeValidation getSyntaxeValidation() {
        return syntaxeValidation;
    }

    /**
     * Sets the value of the syntaxeValidation property.
     * 
     * @param value
     *     allowed object is
     *     {@link SyntaxeValidation }
     *     
     */
    public void setSyntaxeValidation(SyntaxeValidation value) {
        this.syntaxeValidation = value;
    }

    /**
     * Gets the value of the name property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setName(String value) {
        this.name = value;
    }

    /**
     * Gets the value of the extension property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getExtension() {
        return extension;
    }

    /**
     * Sets the value of the extension property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setExtension(String value) {
        this.extension = value;
    }
    
    
    /**
     * 
     * @return a list with Map URL
     */
    public Map<String, List<String>> getUrlMap(){
    	Map<String, List<String>> urlMap = new HashMap<String, List<String>>();
//    	List<EdgeConfig> edgesConfig= getEdgeTypes().get(0).getEdgeConfig();
//    	List<NodeConfig> nodesConfig= getNodeTypes().get(0).getNodeConfig();
    	
    	for(NodeTypes nodeConfig: this.nodeTypes){
    		urlMap.put(nodeConfig.getType(),nodeConfig.getInfoUrlNode().getUrl());
    	}
    	
    	for(EdgeTypes edgeConfig : this.edgeTypes)
    		urlMap.put(edgeConfig.getType(), edgeConfig.getInfoUrlEdge().getUrl());
    	return urlMap;
    }

	/* (non-Javadoc)
	 * @see java.lang.Object#toString()
	 */
	@Override
	public String toString() { 
		return "{ \"diagram\" : { \"nodeTypes\" :" + nodeTypes + ", \"edgeTypes\" :" + edgeTypes + ", \"syntaxeValidation\" :" + syntaxeValidation + ", \"name\" :" + "\""+ name +"\""+ ", \"pathFile\" :"
				+ "\""+ extension + "\""+"}}";
	}


}
